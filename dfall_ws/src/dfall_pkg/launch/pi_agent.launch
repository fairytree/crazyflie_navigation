<launch>

	<!-- INPUT ARGUMENT OF THE AGENT's ID -->
	<arg name="agentID" default="$(optenv DFALL_DEFAULT_AGENT_ID)" />

	<!-- INPUT ARGUMENT OF THE COORDINATOR's ID -->
	<arg name="coordID" default="$(optenv DFALL_DEFAULT_COORD_ID)" />

	<!-- INPUT ARGUMENT FOR EMULATING THE CRAZY RADIO -->
	<arg name="emulateRadio" default="false" />

	<!-- Example of how to use the value in agentID -->
    <!-- <param name="param" value="$(arg agentID)"/> -->

    <!-- Example of how to specify the agentID from command line -->
    <!-- roslaunch dfall_pkg agentID:=1 -->

    <!-- Example of how to specify the withGUI from command line -->
    <!-- roslaunch dfall_pkg withGUI:=false -->

    <group ns="$(eval 'agent' + str(agentID).zfill(3))">

		<!-- CRAZY RADIO -->
		<group unless="$(arg emulateRadio)">
			<node
				pkg    = "dfall_pkg"
				name   = "CrazyRadio"
				output = "screen"
				type   = "CrazyRadio.py"
				>
				<rosparam
					command = "load"
					file    = "$(find dfall_pkg)/param/BatteryMonitor.yaml"
					ns      = "CrazyRadioCopyOfBatteryMonitor"
				/>
				<rosparam
					command = "load"
					file    = "$(find dfall_pkg)/param/CrazyRadioConfig.yaml"
					ns      = "CrazyRadioConfig"
				/>
			</node>
		</group>
		<group if="$(arg emulateRadio)">
			<node
				pkg    = "dfall_pkg"
				name   = "CrazyRadio"
				output = "screen"
				type   = "CrazyRadioEmulator"
				>
				<rosparam
					command = "load"
					file    = "$(find dfall_pkg)/param/CrazyRadioConfig.yaml"
					ns      = "CrazyRadioConfig"
				/>
			</node>
		</group>


		<!-- FLYING AGENT CLIENT -->
		<node
			pkg    = "dfall_pkg"
			name   = "FlyingAgentClient"
			output = "screen"
			type   = "FlyingAgentClient"
			>
			<param name="agentID" value="$(arg agentID)" />
			<param name="coordID" value="$(arg coordID)" />
		</node>

		<!-- BATTERY MONITOR -->
		<node
			pkg    = "dfall_pkg"
			name   = "BatteryMonitor"
			output = "screen"
			type   = "BatteryMonitor"
			>
		</node>

		<!-- DEFAULT CONTROLLER -->
		<node
			pkg    = "dfall_pkg"
			name   = "DefaultControllerService"
			output = "screen"
			type   = "DefaultControllerService"
			>
		</node>

		<!-- STUDENT CONTROLLER -->
		<node
			pkg    = "dfall_pkg"
			name   = "StudentControllerService"
			output = "screen"
			type   = "StudentControllerService"
			>
		</node>

		<!-- TEST MOTORS CONTROLLER -->
		<node
			pkg    = "dfall_pkg"
			name   = "TestMotorsControllerService"
			output = "screen"
			type   = "TestMotorsControllerService"
			>
		</node>

		<!-- PARAMETER SERVICE -->
		<node
			pkg    = "dfall_pkg"
			name   = "ParameterService"
			output = "screen"
			type   = "ParameterService"
			>
			<param name="type"     type="str"  value="agent" />
			<param name="agentID"  value="$(arg agentID)" />
			<rosparam
				command = "load"
				file    = "$(find dfall_pkg)/param/YamlFileNames.yaml"
				ns      = "YamlFileNames"
			/>
			<rosparam
				command = "load"
				file    = "$(find dfall_pkg)/param/FlyingAgentClientConfig.yaml"
				ns      = "FlyingAgentClientConfig"
			/>
			<rosparam
				command = "load"
				file    = "$(find dfall_pkg)/param/BatteryMonitor.yaml"
				ns      = "BatteryMonitor"
			/>
			<rosparam
				command = "load"
				file    = "$(find dfall_pkg)/param/DefaultController.yaml"
				ns      = "DefaultController"
			/>
			<rosparam
				command = "load"
				file    = "$(find dfall_pkg)/param/StudentController.yaml"
				ns      = "StudentController"
			/>
		</node>

		<!-- AGENT STATUS FOR WEB INTERFACE -->
		<node
			pkg    = "dfall_pkg"
			name   = "AgentStatusForWebInterface"
			output = "screen"
			type   = "AgentStatusForWebInterface"
			>
		</node>

	</group>

</launch>
